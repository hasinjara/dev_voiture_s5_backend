dans ce cas on a un view sql
@Entity
@Table(name = "v_details_annonce", schema = "public", catalog = "voiture")
public class DetailsAnnonce {
    
}

on cree simplement un repository et c'es tout
exemple
import com.demo.voiture.models.DetailsAnnonce;
import org.springframework.data.jpa.repository.JpaRepository;

public interface DetailsAnnonceRepository extends JpaRepository<DetailsAnnonce, String> {
}

j'ai dis seulement les repositories

generer moi des repositories pour ces classes
@Entity
@Table(name = "v_details_fiche_techniques", schema = "public", catalog = "voiture")
public class DetailsFicheTechniques {

}

@Entity
@Table(name = "v_details_voiture", schema = "public", catalog = "voiture")
public class DetailsVoiture {

}

@Entity
@Table(name = "v_voiture_categorie", schema = "public", catalog = "voiture")
public class DetailsVoitureCategorie {

}

@Entity
@Table(name = "voiture_categorie", schema = "public", catalog = "voiture")
public class VoitureCategorie {

}


@Entity
@Table(name = "favoris_user_annonce", schema = "public", catalog = "voiture")
public class FavorisUserAnnonce {

}


@Entity
@Table(name = "param_commission", schema = "public", catalog = "voiture")
public class ParamCommission {

}

@Entity
@Table(name = "v_voiture_marque", schema = "public", catalog = "voiture")
public class VoitureMarque { 

}
